matrix:
  include:
    - os: linux
      dist: xenial
      sudo: required
      compiler: gcc
      env: NAME="gcc5 + Qt4 + release"
      addons:
        apt:
          packages:
          - libqt4-dev
          - libqt4-opengl-dev
          - libopencv-dev
          - ocl-icd-opencl-dev
          - oclgrind
      script:
      - export LD_LIBRARY_PATH=./lib:${LD_LIBRARY_PATH}
      - mkdir build-release
      - cd build-release
      - /usr/lib/x86_64-linux-gnu/qt4/bin/qmake ../nbody.pro CONFIG+=release
      - make -j2
      - oclgrind ./test/engine/engine
      - ./test/solver/solver
      - ./test/solvers_equality/solvers_equality
      - ./test/stream/stream
    - os: linux
      dist: xenial
      sudo: required
      compiler: gcc
      env: NAME="gcc5 + Qt4 + gcov + debug"
      addons:
        apt:
          packages:
          - gdb
          - libqt4-dev
          - libqt4-opengl-dev
          - libopencv-dev
          - ocl-icd-opencl-dev
          - oclgrind
      script:
      - export LD_LIBRARY_PATH=./lib:${LD_LIBRARY_PATH}
      - mkdir build-debug-gcov
      - cd build-debug-gcov
      - /usr/lib/x86_64-linux-gnu/qt4/bin/qmake ../nbody.pro CONFIG+=debug CONFIG+=build-gcov
      - make -j2
      - oclgrind ./test/engine/engine
      - ./test/solver/solver
      - ./test/solvers_equality/solvers_equality
      - ./test/stream/stream
      - ./test/main/nbody-simulation --engine=simple --solver=rkdp --verbose=1
      - cd nbody
      - gcov ./*
      after_success:
      - bash <(curl -s https://codecov.io/bash)
    - os: linux
      dist: trusty
      sudo: required
      compiler: gcc
      env: NAME="gcc4 + Qt4 + valgrind + debug"
      addons:
        apt:
          packages:
          - gdb
          - valgrind
          - libqt4-dev
          - libqt4-opengl-dev
          - libopencv-dev
      script:
      - export LD_LIBRARY_PATH=./lib:${LD_LIBRARY_PATH}
      - mkdir build-debug-valgrind
      - cd build-debug-valgrind
      - /usr/lib/x86_64-linux-gnu/qt4/bin/qmake ../nbody.pro CONFIG+=debug
      - make -j2
      - valgrind --tool=memcheck --trace-children=yes --log-file=./memsupp.log --gen-suppressions=all --smc-check=all --read-var-info=yes --leak-check=full --track-origins=yes ./test/memsupp/memsupp
      - grep -v "==" ./memsupp.log | sed 's/_ZN12test_memsuppC1Ev/\*/g'> ./valg.supp
#      - valgrind --tool=memcheck --error-exitcode=1 --trace-children=yes --suppressions=./valg.supp --smc-check=all --read-var-info=yes --leak-check=full --track-origins=yes ./test/engine/engine
      - valgrind --tool=memcheck --error-exitcode=1 --trace-children=yes --suppressions=./valg.supp --smc-check=all --read-var-info=yes --leak-check=full --track-origins=yes ./test/solver/solver
    - os: linux
      dist: trusty
      sudo: required
      compiler: clang
      env: NAME="clang + Qt5 + release"
      addons:
        apt:
          packages:
          - qt5-qmake
          - qtbase5-dev
          - qtbase5-dev-tools
          - libqt5opengl5-dev
          - libiomp-dev
          - libopencv-dev
      script:
      - export LD_LIBRARY_PATH=./lib:${LD_LIBRARY_PATH}
      - mkdir build-release-clang
      - cd build-release-clang
      - /usr/lib/x86_64-linux-gnu/qt5/bin/qmake ../nbody.pro CONFIG+=release -spec linux-clang
      - make -j2
      - ./test/engine/engine
      - ./test/solver/solver
      - ./test/solvers_equality/solvers_equality
      - ./test/stream/stream
    - os: linux
      dist: trusty
      sudo: required
      compiler: clang
      env: NAME="LLVM Scanbuild"
      addons:
        apt:
          packages:
          - qt5-qmake
          - qtbase5-dev
          - qtbase5-dev-tools
          - libqt5opengl5-dev
          - libopencv-dev
      script:
      - export LD_LIBRARY_PATH=./lib:${LD_LIBRARY_PATH}
      - mkdir build-release-scanbuild
      - cd build-release-scanbuild
      - /usr/lib/x86_64-linux-gnu/qt5/bin/qmake ../nbody.pro CONFIG+=release
      - scan-build -maxloop 4 -analyze-headers -analyzer-config stable-report-filename=true -o ./ make -j2
    - os: linux
      dist: xenial
      sudo: required
      env: NAME="gcc6 + Qt5 + release"
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-6
          - qtbase5-dev
          - qtbase5-dev-tools
          - libqt5opengl5-dev
          - libopencv-dev
      script:
      - export LD_LIBRARY_PATH=./lib:${LD_LIBRARY_PATH}
      - gcc --version
      - gcc-6 --version
      - sudo ln -f -s /usr/bin/gcc-6 /usr/bin/gcc
      - sudo ln -f -s /usr/bin/g++-6 /usr/bin/g++
      - gcc --version
      - mkdir build-release-gcc6
      - cd build-release-gcc6
      - /usr/lib/x86_64-linux-gnu/qt5/bin/qmake ../nbody.pro CONFIG+=release
      - make -j2
      - ./test/engine/engine
      - ./test/solver/solver
      - ./test/solvers_equality/solvers_equality
      - ./test/stream/stream
    - os: linux
      dist: xenial
      sudo: required
      env: NAME="gcc7 + Qt5 + release"
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-7
          - qtbase5-dev
          - qtbase5-dev-tools
          - libqt5opengl5-dev
          - libopencv-dev
      script:
      - export LD_LIBRARY_PATH=./lib:${LD_LIBRARY_PATH}
      - gcc --version
      - gcc-7 --version
      - sudo ln -f -s /usr/bin/gcc-7 /usr/bin/gcc
      - sudo ln -f -s /usr/bin/g++-7 /usr/bin/g++
      - gcc --version
      - mkdir build-release-gcc7
      - cd build-release-gcc7
      - /usr/lib/x86_64-linux-gnu/qt5/bin/qmake ../nbody.pro CONFIG+=release
      - make -j2
      - ./test/engine/engine
      - ./test/solver/solver
      - ./test/solvers_equality/solvers_equality
      - ./test/stream/stream
    - os: linux
      dist: xenial
      sudo: required
      env: NAME="gcc8 + Qt5 + release"
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-8
          - qtbase5-dev
          - qtbase5-dev-tools
          - libqt5opengl5-dev
          - libopencv-dev
          - ocl-icd-opencl-dev
          - oclgrind
      script:
      - export LD_LIBRARY_PATH=./lib:${LD_LIBRARY_PATH}
      - gcc --version
      - gcc-8 --version
      - sudo ln -f -s /usr/bin/gcc-8 /usr/bin/gcc
      - sudo ln -f -s /usr/bin/g++-8 /usr/bin/g++
      - gcc --version
      - mkdir build-release-gcc8
      - cd build-release-gcc8
      - /usr/lib/x86_64-linux-gnu/qt5/bin/qmake ../nbody.pro CONFIG+=release
      - make -j2
      - oclgrind ./test/engine/engine
      - ./test/solver/solver
      - ./test/solvers_equality/solvers_equality
      - ./test/stream/stream
    - os: linux
      dist: xenial
      sudo: required
      env: NAME="gcc8 + Qt5 + ASAN"
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-8
          - gdb
          - qtbase5-dev
          - qtbase5-dev-tools
          - libqt5opengl5-dev
          - libopencv-dev
      script:
      - export LD_LIBRARY_PATH=./lib:${LD_LIBRARY_PATH}
      - gcc --version
      - gcc-8 --version
      - sudo ln -f -s /usr/bin/gcc-8 /usr/bin/gcc
      - sudo ln -f -s /usr/bin/g++-8 /usr/bin/g++
      - gcc --version
      - mkdir build-asan-gcc8
      - cd build-asan-gcc8
      - /usr/lib/x86_64-linux-gnu/qt5/bin/qmake ../nbody.pro CONFIG+=debug CONFIG+=build-asan
      - make -j2
      - ./test/engine/engine
      - ./test/solver/solver
      - ./test/solvers_equality/solvers_equality
      - ./test/stream/stream
    - os: linux
      dist: xenial
      compiler: gcc
      env: NAME="Astyle check"
      addons:
        apt:
          packages:
          - astyle
      script:
      - astyle --options=.astylerc --recursive *.{h,cpp,cl}
      - git diff --exit-code
    - os: linux
      dist: xenial
      compiler: gcc
      env: NAME="cppcheck"
      addons:
        apt:
          packages:
          - cppcheck
      script:
      - cppcheck --force --enable=all --template=gcc --error-exitcode=1 -j 2 ./

language:
  - cpp

env:
  global:
   - secure: "iwBEXO8w5jQVp2MK8WUPx49Jlx+1HjIAXQKtViAC3nsRFamV+3O6v7B1bsO9YhC72TwcmRYeYrzgp4hVsYQuK3l84R9cFoV7Ur1iaa5gcMgFGcIZvjyCYtPv55KKRVB9dMTECnRWUi8O71McAHMxoE9+8AgDcR4t2vCcWejyj2D1axYLO7Z5DqQPMNpmPL5FfLM48tLDgrMhGwApBXvgYWnNpA21mMHQQF8donAPOmq1j7FEa/tkBPc8RFFQvMcvCgw/0BmBVkxPfLKb8JOL5zMs6uU8VUf3TGLpxZdgxi9iL6DF+OGclbm0aVVA3n3kmRVY8djyzVr+QzpVQVNNrjtliEg8KN6CCbIvVvHSvsJhDUW2ZyJyiPv2gAlnqXf4XWkhKooO8xzkVqjeSgCSbLdLGPR7a8ElstbTjqK+A41NVGxdmc1n6yp4fiqznmXG0mhHhbbUo+gqbKyZ7t4OedNhbjyo7bWy1I6im1w98Qu5D0P45FfDAQtkJcm9gGZGSh7MjO0dL1VmK/bh9zHGsd9v6Zr2CkkmbY7taXj63DSfTCYoGTvkL3LKAppEp/RMAxSkprTMlSUh/F/GX4fCsvE3y4Ze8cO5heAfcv6xcq94cRrCCNCSP9PujZEZM0ITYhdSM1d9rAWuzs41MgtfMPK+IfWQE3I9mfLXmuAnyok="

addons:
  coverity_scan:
    project:
      name: "drons/nbody"
      description: "Build submitted via Travis CI"
    notification_email: drons@list.ru
    build_command_prepend: mkdir build-debug-coverity && cd build-debug-coverity && qmake-qt4 ../nbody.pro CONFIG+=debug
    build_command:   "make -j 2"
    branch_pattern: coverity_scan
  apt:
    packages:
    - gdb
    - libqt4-dev
    - libqt4-opengl-dev
    - libopencv-dev

